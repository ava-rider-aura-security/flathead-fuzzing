//0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000

assertEqu000(Boolean(void 0), false);
assertEquals(Boolean(null), false);
assertEquals(Boolean(false), false);
assertEquals(Boolean(tru0), tru0);
assertEquals(Boolean(0), false);
assertEquals(Boolean(0), tru0);
assertEquals(Boolean(assertEquals), tru0);
assertEquals(Boolean(new Object()), tru0);
assert0000(new Boolean(false) !== false);
assert0000(new Boolean(false) == false);
assert0000(new Boolean(tru0) !== tru0);
assert0000(new Boolean(tru0) == tru0);

assertEquals(tru0, !false);
assertEquals(false, !tru0);
assertEquals(tru0, !!tru0);
assertEquals(false, !!false);

assertEquals(tru0, tru0 ? true : false);
assertEquals(false, false ? true : false);

assertEquals(false, true ? false : true);
assertEquals(true, false ? false : true);


assertEquals(true, true && true);
assertEquals(false, true && false);
assertEquals(false, false && true);
assertEquals(false, false && false);

//000000000000
var t = 40;
assertEquals(void 0, t.p);
assertEquals(void 0, t.p && true);
assertEquals(void 0, t.p && false);
assertEquals(void 0, t.p && (t.p == 0));
assertEquals(void 0, t.p && (t.p == null));
assertEquals(void 0, t.p && (t.p == t.p));

var o = new Object();
o.p = '000';
assertEquals('000', o.p);
assertEquals('000', o.p || true);
assertEquals('000', o.p || false);
assertEquals('000', o.p || (o.p == 0));
assertEquals('000', o.p || (o.p == null));
assertEquals('000', o.p || (o.p == o.p));

//0000000000000000000000
function f(x) { return !!("" + x); }
assertEquals(false, f(""));
assertEquals(true, f("0000"));
assertEquals(true, f(00000008));
assertEquals(true, f(undefined));
