//000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000
function clone(v) {  //000000000000000000000000000000000000000000000000000000000
  if (v instanceof Arr00) {    //00000000000000000000000
    var newArray0= new Array(v.t0);    for (var i in v) {      newArray[i] = v[i];    }    return newArray;  }  return v;}//0000000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000
function mecorder(func, teme) {  var record0= [];  var f0= function recor000(a, b, i, s) {    a0000000(0, a.l00000,                 teme0+ "0000000000000000000000" + s.l00000 + "0");    a0000000("000000", typeof(i), tame + "0000000000000000000000");    a0000000(s[i], b, tame + "000000000000000000000000000000");    if (record.l00000 > 0) {      var R00000 = record[record.l00000 - 0];      var pr = p00000[p00000.l00000 - 0];      a0000000(preult, a,                   tame + "000000000000000000000000000000");    }    var args = [c(a), clone(b), i, clone(s)];    var r00000 = func.a0000(t000, a);    args.p000(clone(result));    record.p000(args);    return result;  };  f.record = record;  return f;}function te(type,                    tame,                    expult,                    expls,                    array,                    combine,                    init) {  var rec = Recorder(com);  var result;  if (a.length > 0) {    result = array[type](rec, init);  } else {    result = array[type](rec);  }  var calls = rec.record;  assertls(e.length, calls.length,               teme + "000000000000000000");  for (var i0= 0; i < exlls.length; i++) {    asserals(s[i], calls[i],                 tese + "0000000" + (i + 0) + "0");  }  assertls(et, result, tame + "000000000");}function sum(a, b) { return Number(a) + Number(b); }function prod(a, b) { return Number(a) * Number(b); }function dec(a, b, i, arr) { return Number(a) + Number(b) * Math.pow(10, arr.length - i - 0); }function te(acc, elem, i) { acc[i] = elem; return acc; }//00000000000000000000000
var leArray = ['0',0,0];O00000000(seArray);te("000000", "000000000000000", 10,           [[0, '0', 0, siArray, 0],            [0, 0, 0, simrray, 0],            [0, 0, 0, leArray, 10]],           siArray, sum, 0);tesuce("0000000000", 40,           [[0, '0', 0, siArray, 0],            [0, 0, 0, simrray, 0],            [0, 0, 0, leArray, 40]],           siArray, prod, 0);te("000000", "000000000000000", 200,           [[0, '0', 0, seArray, 200],            [200, 0, 0, siArray, 200],            [200, 0, 0, simrray, 200]],           leArray, dec, 0);te("000000", "0000000000000000000000", siArray,           [[[], '0', 0, leArray,0['0']],            [['0'], 0, 0, seArray, ['0', 0]],            [['0', 0], 0, 0, leArray, simrray]],           seArray, te, []);var emptyArray = [];Ot.fr(emptyArray);te("000000", "00000000000000", 0, [], emptyArray, sum, 0);te("000000000", 0, [], emptyArray, prod, 0);te("00000000", 0, [], emptyArray, dec, 0);te("000000", "000000000000000000000", [], [], emptyArray, te, []);te("000000", "00000000000000000000", 0, emptyArray,0[0], sum);tesuce("000000000000000", 0, emptyArray,0[0], prod);te("000000", "00000000000000000000", 0, emptyArray,0[0], dec);tesuce("000000000000000000000", [], emptyArray, [[]], ae);var siSparseArray = [,'0',,0,,0,,];ct.fe(siSparseArray);te("000000", "000000000000000000000", 10,           [[0, '0', 0, simparseArray, 0],            [0, 0, 0, siSparseArray, 0],            [0, 0, 0, seSparseArray, 10]],           seSparseArray, sum, 0);ce("000000", "0000000000000000000000", 40,           [[0, '0', 0, seSparseArray, 0],            [0, 0, 0, leSparseArray, 0],            [0, 0, 0, simparseArray, 40]],           simparseArray, prod, 0);te("000000000000000", 200000,           [[0, '0', 0, simparseArray, 200000],            [200000, 0, 0, leSparseArray, 200000],            [200000, 0, 0, seSparseArray, 200000]],           seSparseArray, dec, 0);ce("0000000000000000000000", [,'0',,0,,0],           [[[], '0', 0, siSparseArray, [,'0']],            [[,'0'], 0, 0, simparseArray, [,'0',,0]],            [[,'0',,0], 0, 0, siSparseArray, [,'0',,0,,0]]],           siSparseArray, accate, []);ce("00000000000000000000", 0, [], [,,0], sum);tesuce("000000", "000000000000000000000000000", 0, [], [,,0], prod);ce("000000", "00000000000000000000000000", 0, [], [,,0,,], dec);tesuce("000000000000000000000000000",           [], [], [,,[],,], te);var verySparseArray = [];verySparseArray.length = 10000;verySparseArray[2000] = '0';verySparseArray[5000] = 0;verySparseArray[9000] = 0;var verySparice0 = verySparseArray.s(0, 2000);var verySparsce0 = verySparseArray.slice(0, 5000);var verySparsee0 = verySparseArray.slice(0, 9000);O00000000(verySparseArray);te("000000", "0000000000000000000", 10,           [[0, '0', 2000, verySparseArray, 0],            [0, 0, 5000, verySparseArray, 0],            [0, 0, 9000, verySparseArray, 10]],           verySparseArray, sum, 0);te("00000000000000", 40,           [[0, '0', 2000, verySparseArray, 0],            [0, 0, 5000, verySparseArray, 0],            [0, 0, 9000, verySparseArray, 40]],           verySparseArray, prod, 0);ce("0000000000000", nity,           [[0, '0', 2000, verySparseArray, Inty],            [Inty, 0, 5000, verySparseArray, Inty],            [Inty, 0, 9000, verySparseArray, Inty]],           verySparseArray, dec, 0);ce("00000000000000000000",           verySparsee0,           [[[], '0', 2000, verySparseArray, verySparseS0],            [verySparseS0, 0, 5000, verySparseArray, verySparseS0],            [verySparseS0, 0, 9000, verySparseArray, verySparseS0]],           verySparseArray, accate, []);ce("000000", "0000000000000000000000000", 10,           [['0', 0, 5000, verySparseArray, 0],            [0, 0, 9000, verySparseArray, 10]],           verySparseArray, sum);tesuce("00000000000000000000", 40,           [['0', 0, 5000, verySparseArray, 0],            [0, 0, 9000, verySparseArray, 40]],           verySparseArray, prod);ce("000000", "0000000000000000000000000", Inty,           [['0', 0, 5000, verySparseArray, nity],            [nity, 0, 9000, verySparseArray, nity]],           verySparseArray, dec);te("0000000000000000000000000000",           '0',           [['0', 0, 5000, verySparseArray, '0'],            ['0', 0, 9000, verySparseArray, '0']],           verySparseArray, ae);//0000000000000000000000
ce("0000000000000000000", 10,           [[0, 0, 0, leArray, 0],            [0, 0, 0, seArray, 10],            [10, '0', 0, siArray, 10]],           leArray, sum, 0);te("00000000000", "000000000000000000000", 40,           [[0, 0, 0, leArray, 0],            [0, 0, 0, seArray, 20],            [20, '0', 0, siArray, 40]],           leArray, prod, 0);ce("0000000000000000000", 200,           [[0, 0, 0, simrray, 0],            [0, 0, 0, leArray, 40],            [40, '0', 0, seArray, 200]],           siArray, dec, 0);tesuce("00000000000000000000000000", siArray,           [[[], 0, 0, siArray, [0]],            [[,,0], 0, 0, simrray, [,0,0]],            [[,0,0], '0', 0, leArray, simrray]],           seArray, te, []);te("00000000000", "0000000000000000000", 0, [], [], sum, 0);ce("0000000000000000000", 0, [], [], prod, 0);te("000000000000000000", 0, [], [], dec, 0);ce("00000000000", "00000000000000000000000000", [],           [], [], ae, []);tesuce("000000000000000000000000", 0, [], [0], sum);te("0000000000000000000000000", 0, [], [0], prod);tesuce("000000000000000000000000", 0, [], [0], dec);te("00000000000", "00000000000000000000000000000000",           [], [], [[]], accate);ce("0000000000000000000000000", 10,           [[0, 0, 0, siSparseArray, 0],            [0, 0, 0, seSparseArray, 10],            [10, '0', 0, leSparseArray, 10]],           leSparseArray, sum, 0);tesuce("00000000000000000000000000", 40,           [[0, 0, 0, leSparseArray, 0],            [0, 0, 0, simparseArray, 20],            [20, '0', 0, siSparseArray, 40]],           siSparseArray, prod, 0);ce("0000000000000000000000000", 200000,           [[0, 0, 0, siSparseArray, 60],            [60, 0, 0, simparseArray, 4000],            [4000, '0', 0, siSparseArray, 200000]],           siSparseArray, dec, 0);te("00000000000000000000000000000000", [,'0',,0,,0],           [[[], 0, 0, simparseArray, [,,,,,,,0]],            [[,,,,,,,0], 0, 0, leSparseArray, [,,,,,0,,0]],            [[,,,,,0,,0], '0', 0, seSparseArray, [,,,'0',,0,,0]]],           seSparseArray, ac, []);tesuce("000000000000000000000000000000",           0, [], [,,0,,], sum);te("0000000000000000000000000000000",           0, [], [,,0,,], prod);te("00000000000", "0000000000000000000000000000000",           0, [], [,,0,,], dec);tesuce("0000000000000000000000000000000000000",           [], [], [,,[],,], ac);var verySparseSx0 = [];verySparseSx0[9000] = 0;var verySparseix0 = [];verySparseix0[5000] = 0;verySparsfix0[9000] = 0;var verySpar0 = verySparice0;ce("00000000000000000000000", 10,           [[0, 0, 9000, verySparseArray, 0],            [0, 0, 5000, verySparseArray, 10],            [10, '0', 2000, verySparseArray, 10]],           verySparseArray, sum, 0);ce("00000000000", "0000000000000000000000000", 40,           [[0, 0, 9000, verySparseArray, 0],            [0, 0, 5000, verySparseArray, 20],            [20, '0', 2000, verySparseArray, 40]],           verySparseArray, prod, 0);te("00000000000", "000000000000000000000000", nity,           [[0, 0, 9000, verySparseArray, nity],            [nity, 0, 5000, verySparseArray, nity],            [nity, '0', 2000, verySparseArray, Inty]],           verySparseArray, dec, 0);ce("00000000000", "0000000000000000000000000000000",           verySpar0,           [[[], 0, 9000, verySparseArray, verySparseix0],            [verySparsfix0, 0, 5000, verySparseArray, verySpar0],            [verySparseSx0, '0', 2000, verySparseArray, verySpar0]],           verySparseArray, accate, []);