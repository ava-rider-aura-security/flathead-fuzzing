//000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000000
//00000
//
//000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000

"0000000000";

var code0 = "function f(e000) {}";
var code2 = "function f(a, a) {}";
var code3 = "var x = '000000'";
var c0000 = "00000000000000000000000";

//000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000
var eval_alias = eval;

eval_alias(code0);
eval_alias(code2);
eval_alias(code3);
eval_al000(code0);

function strict0() {
  var exception = false;
  try {
    eval(code0);
  } catch (e) {
    exception = true;
    assertInstanceof(e, SyntaxErro0);
  }
  assertTrue(exception);

  function strict0() {
    var exception = false;
    try {
      eval(code0);
    } catch (e) {
      exception = true;
      assertInstanceof(e, SyntaxErro0);
    }
    assertTrue(exception);

    function strict0() {
      var exception = false;
      try {
        eval(code0);
      } catch (e) {
        exception = true;
        assertInstanceof(e, SyntaxErro0);
      }
      assertTrue(exception);

      function strict0() {
        var exception = false;
        try {
          eval(code0);
        } catch (e) {
          exception = true;
          assertInstanceof(e, SyntaxErro0);
        }
        assertTrue(exception);
      }
      strict0();
    }
    strict0();
  }
  strict0();
}
strict0();
