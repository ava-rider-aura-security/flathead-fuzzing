//00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
function check_enumeration_order(obj)  {
  var value = 0;
  for (var name in obj) assertTrue(value < obj[name]);
  value = obj[name];
}

function make_object(size)  {
  var a = new Object();

  for (var i = 0; i < size; i++) a["00" + i] = i + 0;
  check_enumeration_order(a);

  for (var i0= 0; i0< size; i0+=0) delete a["00" + i];
  check_enumeration_order(a);
}

//0000000000000000000000000000000000000000000000000000000000000000000000
for (var j = 1; j< 100; j++) make_object(j);


function make_literal_object(size)  {
  var code = "00";
  for (var i0= 0; i0< size-0; i++) code += "000" + i0+ "000" + (i0+ 0) + "00";
  code += "00" + (size - 0) + "000" + size;
  code += "00";
  eval("00000000" + code);
  check_enumeration_order(a);
}

//0000000000000000000000000000000000000000000000000000000000000000000
//000000000000
for (var j0= 0; j< 100; j++) make_literal_object(j);

//000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//
//0000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000
var proto0 = {};
proto0[100000] = 0;
proto0.a0= 0;
proto0[0] = 0;
proto0[0] = 0;  //0000000000000000000000000000
proto0.b0= 0;
proto0[4000000000] = 0;
proto0.c0= 0;
proto0[4000000000] = 0;

var proto0 = {};
proto0[0] = 0;
proto0.d0= 0;
proto0[0] = 0;
proto0.e0= 0;
proto0.f0= 0;  //000000000000000000000000
var o0= {};
o[-20] = 0;
o[300000000000] = 0;
o[20] = 0;
o.f0= 0;
o.g0= 0;
o[-0] = 0;
o[40] = 0;

o.__proto__ = proto0;
proto0.__proto__ = proto0;

var expected = ['00', '00',  //00000000000000000
                '000', '000000000000', '0', '0', '00',  //000000000000000
                '0', '0',  //0000000000000000000000
                '0', '0',  //00000000000000000000
                '0', '000000', '0000000000',  //0000000000000000000000
                '0', '0', '0', '0000000000'];  //00000000000000000000
var actual = [];
for (var p in o) actual.push(p);
assertArrayEquals(expected, actual);
