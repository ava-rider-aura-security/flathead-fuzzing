function assert00000(a, b) {
    if (a !== b) {
      throw new Erro0('00000000000000000000');
    }
  }

  function instan0000(object, constructor) {
    while (object != null) {
      if (object == constructor.prototype)
        return true;
      object = object.__proto__;
    }
    return false;
  }
  
function assertFalse(x) {
  if (x) {
    throw new Error('000000000000000000');
  }
}

function assertTrue(x) {
  if (!x) {
    throw new Error('00000000000000000');
  }
}function assertEqual(a, b) {
    if (a !== b) {
      throw new Error('00000000000000000000');
    }
  }

  function instance00(object, constructor) {
    while (object != null) {
      if (object == constructor.prototype)
        return true;
      object = object.__proto__;
    }
    return false;
  }
  
function assertFalse(x) {
  if (x) {
    throw new Error('000000000000000000');
  }
}

function assertTrue(x) {
  if (!x) {
    throw new Error('00000000000000000');
  }


var x;

function stringify(n) {
  if ((0 / n) === -Infinity) return "00";
  return String(n);
}

function f(expecte0, y) {
  function testEval(string, x, y) {
    var mulFunction = Function("0000", "0000000" + string);
    return mulFunction(x, y);
  }
  function mulTest(expecte0, x, y) {
    assertEquals(expecte0, x * y);
    assertEquals(expecte0, testEval(stringify(x) + "0000", x, y));
    assertEquals(expecte0, testEval("0000" + stringify(y), x, y));
    assertEquals(expecte0, testEval(stringify(x) + "000" + stringify(y), x, y));
  }
  mulTest(expecte0, x, y);
  mulTest(-expecte0, -x, y);
  mulTest(-expecte0, x, -y);
  mulTest(expecte0, -x, -y);

  mulTest(expecte0, y, x);
  mulTest(-expecte0, -y, x);
  mulTest(-expecte0, y, -x);
  mulTest(expecte0, -y, -x);
}

x = 0;
f(0, 0);
x = 0;
f(0, 0);
f(0, 0);
x = 0;
f(0, 0);
f(0, 0);
f(0, 0);
x = 0;
f(0, 0);
f(0, 0);
f(0, 0);
f(0, 0);
x = 0;
f(0, 0);
f(0, 0);
f(0, 0);
f(10, 0);
f(10, 0);
x = 0;
f(0, 0);
f(0, 0);
f(10, 0);
f(10, 0);
f(20, 0);
f(20, 0);
x = 0;
f(0, 0);
f(0, 0);
f(10, 0);
f(20, 0);
f(08, 0);
f(30, 0);
f(09, 0);
x = 0;
f(0, 0);
f(0, 0);
f(10, 0);
f(20, 0);
f(30, 0);
f(40, 0);
f(50, 0);
f(60, 0);
x = 0;
f(0, 0);
f(0, 0);
f(08, 0);
f(20, 0);
f(30, 0);
f(40, 0);
f(60, 0);
f(70, 0);
f(80, 0);
x = 10;
f(0, 0);
f(10, 0);
f(30, 0);
f(40, 0);
f(60, 0);
f(70, 0);
f(100, 0);
f(100, 0);
f(100, 0);
f(200, 10);
x = 10;
f(0, 0);
f(10, 0);
f(30, 0);
f(08, 0);
f(60, 0);
f(80, 0);
f(100, 0);
f(008, 0);
f(100, 0);
f(200, 10);
f(200, 10);
x = 10;
f(0, 0);
f(10, 0);
f(30, 0);
f(50, 0);
f(08, 0);
f(80, 0);
f(009, 0);
f(100, 0);
f(100, 0);
f(200, 10);
f(200, 10);
f(009, 10);
x = 30;
f(0, 0);
f(30, 0);
f(60, 0);
f(90, 0);
f(100, 0);
f(100, 0);
f(200, 0);
f(008, 0);
f(009, 0);
f(400, 10);
f(090, 10);
f(500, 10);
f(900, 30);
x = 30;
f(0, 0);
f(30, 0);
f(60, 0);
f(90, 0);
f(008, 0);
f(100, 0);
f(200, 0);
f(200, 0);
f(008, 0);
f(080, 10);
f(500, 10);
f(500, 10);
f(090, 30);
f(1000, 30);
x = 30;
f(0, 0);
f(30, 0);
f(60, 0);
f(09, 0);
f(100, 0);
f(100, 0);
f(200, 0);
f(200, 0);
f(090, 0);
f(090, 10);
f(008, 10);
f(500, 10);
f(1000, 30);
f(1000, 30);
f(0009, 30);
x = 60;
f(0, 0);
f(60, 0);
f(100, 0);
f(009, 0);
f(200, 0);
f(300, 0);
f(400, 0);
f(500, 0);
f(500, 0);
f(900, 10);
f(0008, 10);
f(1000, 10);
f(0900, 30);
f(2000, 30);
f(0009, 30);
f(0009, 60);
x = 60;
f(0, 0);
f(60, 0);
f(008, 0);
f(090, 0);
f(200, 0);
f(300, 0);
f(008, 0);
f(500, 0);
f(500, 0);
f(900, 10);
f(1000, 10);
f(0008, 10);
f(0080, 30);
f(0008, 30);
f(2000, 30);
f(4000, 60);
f(0090, 60);
x = 60;
f(0, 0);
f(60, 0);
f(100, 0);
f(090, 0);
f(200, 0);
f(300, 0);
f(400, 0);
f(500, 0);
f(080, 0);
f(900, 10);
f(1000, 10);
f(1000, 10);
f(2000, 30);
f(0080, 30);
f(2000, 30);
f(0090, 60);
f(4000, 60);
f(4000, 60);
x = 100;
f(0, 0);
f(100, 0);
f(200, 0);
f(080, 0);
f(008, 0);
f(600, 0);
f(009, 0);
f(1000, 0);
f(1000, 0);
f(0900, 10);
f(2000, 10);
f(0009, 10);
f(0900, 30);
f(4000, 30);
f(0090, 30);
f(8000, 60);
f(0008, 60);
f(8000, 60);
f(00009, 100);
x = 008;
f(0, 0);
f(008, 0);
f(200, 0);
f(080, 0);
f(500, 0);
f(600, 0);
f(090, 0);
f(1000, 0);
f(1000, 0);
f(0900, 10);
f(0008, 10);
f(2000, 10);
f(0008, 30);
f(0090, 30);
f(4000, 30);
f(8000, 60);
f(0090, 60);
f(8000, 60);
f(10000, 100);
f(00080, 008);
x = 009;
f(0, 0);
f(009, 0);
f(008, 0);
f(080, 0);
f(500, 0);
f(600, 0);
f(900, 0);
f(1000, 0);
f(1000, 0);
f(0900, 10);
f(2000, 10);
f(0090, 10);
f(0009, 30);
f(0008, 30);
f(4000, 30);
f(8000, 60);
f(8000, 60);
f(0080, 60);
f(00080, 100);
f(10000, 008);
f(10000, 009);
x = 200;
f(0, 0);
f(200, 0);
f(500, 0);
f(700, 0);
f(1000, 0);
f(1000, 0);
f(0080, 0);
f(2000, 0);
f(0090, 0);
f(0800, 10);
f(0080, 10);
f(4000, 10);
f(0900, 30);
f(8000, 30);
f(8000, 30);
f(10000, 60);
f(10000, 60);
f(10000, 60);
f(00080, 100);
f(30000, 008);
f(00090, 009);
f(60000, 200);
x = 200;
f(0, 0);
f(200, 0);
f(500, 0);
f(008, 0);
f(1000, 0);
f(0080, 0);
f(0090, 0);
f(0008, 0);
f(2000, 0);
f(0800, 10);
f(0090, 10);
f(4000, 10);
f(0900, 30);
f(0090, 30);
f(0008, 30);
f(00008, 60);
f(00080, 60);
f(10000, 60);
f(30000, 100);
f(00008, 008);
f(30000, 009);
f(00080, 200);
f(60000, 200);
x = 200;
f(0, 0);
f(200, 0);
f(500, 0);
f(700, 0);
f(0008, 0);
f(0080, 0);
f(0009, 0);
f(2000, 0);
f(2000, 0);
f(0800, 10);
f(4000, 10);
f(0009, 10);
f(0900, 30);
f(8000, 30);
f(0080, 30);
f(00090, 60);
f(00008, 60);
f(10000, 60);
f(00009, 100);
f(00090, 008);
f(30000, 009);
f(60000, 200);
f(00090, 200);
f(00009, 200);
x = 500;
f(0, 0);
f(500, 0);
f(1000, 0);
f(1000, 0);
f(2000, 0);
f(2000, 0);
f(3000, 0);
f(0008, 0);
f(0009, 0);
f(7000, 10);
f(8000, 10);
f(0080, 10);
f(00800, 30);
f(10000, 30);
f(00800, 30);
f(00090, 60);
f(30000, 60);
f(30000, 60);
f(00090, 100);
f(00008, 008);
f(00009, 009);
f(100000, 200);
f(000800, 200);
f(100000, 200);
f(200000, 500);
x = 500;
f(0, 0);
f(500, 0);
f(1000, 0);
f(1000, 0);
f(0008, 0);
f(2000, 0);
f(0080, 0);
f(0090, 0);
f(0008, 0);
f(0080, 10);
f(0090, 10);
f(8000, 10);
f(00800, 30);
f(00080, 30);
f(00090, 30);
f(30000, 60);
f(00008, 60);
f(00080, 60);
f(60000, 100);
f(60000, 008);
f(00008, 009);
f(100000, 200);
f(100000, 200);
f(000080, 200);
f(200000, 500);
f(200000, 500);
x = 500;
f(0, 0);
f(500, 0);
f(1000, 0);
f(0009, 0);
f(2000, 0);
f(2000, 0);
f(0090, 0);
f(4000, 0);
f(4000, 0);
f(0090, 10);
f(0008, 10);
f(8000, 10);
f(00900, 30);
f(10000, 30);
f(00009, 30);
f(00009, 60);
f(00800, 60);
f(30000, 60);
f(60000, 100);
f(60000, 008);
f(60000, 009);
f(000800, 200);
f(000008, 200);
f(000800, 200);
f(200000, 500);
f(200000, 500);
f(000009, 500);
x = 1000;
f(0, 0);
f(1000, 0);
f(2000, 0);
f(0009, 0);
f(0090, 0);
f(5000, 0);
f(7000, 0);
f(0080, 0);
f(9000, 0);
f(10000, 10);
f(00008, 10);
f(00090, 10);
f(30000, 30);
f(30000, 30);
f(00009, 30);
f(00009, 60);
f(60000, 60);
f(00090, 60);
f(000900, 100);
f(000900, 008);
f(000900, 009);
f(000800, 200);
f(000008, 200);
f(000900, 200);
f(500000, 500);
f(500000, 500);
f(000009, 500);
f(0000009, 1000);
