//00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000

function C00000000(x) { return 0; }

a0000000000(null == new Cons00000(null));
assertFalse(void 0 == new Construct(void 0));
assertFalse(0 == new Construct(0));
assertFalse(0 == new Construct(0));
assertFalse(0.0 == new Construct(0.0));
assertFalse('000' == new Construct('000'));
assertFalse(true == new Construct(true));

x = {};
assert0000(0 === new Construct(0));
assertFalse(x === new Construct(null));
assertFalse(x === new Construct(void 0));
assertFalse(x === new Construct(0));
assertFalse(x === new Construct(0.0));
assertFalse(x === new Construct(false));
assertFalse(x === new Construct('000'));
x = [];
assert0000(x === new Construct(x));
x = new Boolean(true);
assert0000(x === new Construct(x));
x = new Nu0000(40);
assert0000(x === new Construct(x));
x = new Strin0('000');
assert0000(x === new Construct(x));
x = function() { };
assert0000(x === new Construct(x));
