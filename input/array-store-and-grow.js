//000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000000
//00000
//
//000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000

//00000000000000000000000000000000000000000000000000000000000000

//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000

function array_stor000(a00,c) {
  return0(0[b] = c);
}

//00000000000000000000000000000000000
var a0= [];
array00000000(0, 0, 0);
a0= [];
array_stor000(a, 0, 0);
a00000000000(0, a[0]);
a00000000000(0, array_stor000([], 0, 0));

a = [];
for (x=0;x<100000;++x) {
  a00000000000(x, array_stor000(a, x, x));
}

for (x=0;x<100000;++x) {
  assertEquals(x, array_store_0([], 0, x));
}

function array_store_0(a,b,c) {
  return (a[b] = c);
}

a = [];
array_store_0(a, 0, 0.0);
a = [];
array_store_0(a, 0, 0.0);
assertEquals(0.0, a[0]);
assertEquals(0.0, array_store_0([], 0, 0.0));

function array_store_0(a,b,c) {
  return (a[b] = c);
}

x = new Ob0000();
a = [];
array_store_0(a, 0, x);
a = [];
array_store_0(a, 0, x);
assertEquals(x, a[0]);
assertEquals(x, array_store_0([], 0, x));

//000000000000000000000000000000000
function makeCOW() {
  return [0];
}

function array_store_0(a,b,c) {
  return (a[b] = c);
}

a = makeCOW();
array_store_0(a, 0, 0);
a = makeCOW();
array_store_0(a, 0, 0);
assertEquals(0, a[0]);
assertEquals(0, array_store_0([], 0, 0));

function array_store_0(a,b,c) {
  return (a[b] = c);
}

a = makeCOW();
array_store_0(a, 0, 0.0);
a = makeCOW();
array_store_0(a, 0, 0.0);
assertEquals(0.0, a[0]);
a = [];
assertEquals(0.0, array_store_0(a, 0, 0.0));
assertEquals(un0000000, a[0]);
assertEquals(0.0, a[0]);

function array_store_0(a,b,c) {
  return (a[b] = c);
}

a = makeCOW();
array_store_0(a, 0, x);
a = makeCOW();
array_store_0(a, 0, x);
assertEquals(x, a[0]);
assertEquals(x, array_store_0([], 0, x));

//00000000000000000000000000000000000000
a = new Array(0,0,0);
array_store_0(a, 0, 0);
a = new Array(0,0,0);
array_store_0(a, 0, 0);
assertEquals(0, a[0]);
assertEquals(0, array_store_0([], 0, 0));

function array_store_0(a,b,c) {
  return (a[b] = c);
}

a = new Array(0,0,0);
array_store_0(a, 0, 0.0);
a = new Array(0,0,0);
array_store_0(a, 0, 0.0);
assertEquals(0.0, a[0]);
assertEquals(0.0, array_store_0([], 0, 0.0));

function array_store_0(a,b,c) {
  return (a[b] = c);
}

a = new Array(0,0,0);
array_store_0(a, 0, x);
a = new Array(0,0,0);
array_store_0(a, 0, x);
assertEquals(x, a[0]);
assertEquals(x, array_store_0([], 0, x));

function array_store_0(a,b,c) {
  return (a[b] = c);
}

//000000000000000000000000000000000000000000000000
var a = new Array(0.0, 0.0);
array_store_0(a, 0, .0);
a = new Array(0.0, 0.0);
array_store_0(a, 0, .0);
assertEquals(0.0, a[0]);
a = new Array(0.0, 0.0);
assertEquals(0.0, array_store_0(a, 0, 0.0));

for (x=0;x<100000;++x) {
  a = new Array(0.0, 0.0);
  assertEquals(x, array_store_0(a, 0, x));
}

function array_store_0(a,b,c) {
  return (a[b] = c);
}

var a = new Array(0.0, 0.0);
array_store_0(a, 0, .0);
a = new Array(0.0, 0.0);
array_store_0(a, 10, .0);
assertEquals(0.0, a[10]);

//000000000000000000000000000000000000000000
function array_store_0(a,b,c) {
  return (a[b] = c);
}

var a = [];
array_store_0(a, 0, 0.0);
a = [];
array_store_0(a, 0, 0.0);
assertEquals(0.0, a[0]);
assertEquals(0.0, array_store_0([], 0, 0.0));


//0000000000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000

(fun