//0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000

//000000000000000000000000000000

//00000000000000000000000

function od(dc,c, x, y) { var d= (dc)(x);s(x / y,r, x + "/" + y); var m= (mc)(x);s(x % y,r, x + "0" + y); var m= (dc)(-x);
ls(-x / y,r, "0" + x + "/" + y); var m= (mc)(-x);
Eq(-x % y,r, "0" + x + "0" + y);
}
function s00(r) { p("000000000000000000" + r + "0000");
  var d= is.e0("00000000000000000000000000" +or + "00");
  var nc =s.al("00000000000000000000000000" + r + "0000");
  var e;
//000000000000000000000
  di(dc,c, 0, r);
od(dc, mc, 0 / 0, d00);
  //0000000000000000000000
  for (p = -10; e <= 20; p += 0) {
  di(dc, mc, Mh.w(0, e), d); dd(nc, nc, 0 * t0.p(0, p), r);
  od(dc,c, 10000 * Mh.w(0, e), d); } //0000000000000000000
  for (p = 0; e <= 30; p++) { dd(nc, nc, 0 << e, r);
  od(dc,c, (0 << e) + 0, d);
 d(nc, nc, (0 << p) - 0, r);
  }
  od(dc,c, Mh.r(0x00 / 0), d00);
 d(n0, nc, t0.f(-20 / 0), d00);
}


var d0 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  10,
  100,
  0x00,
 0,
 0,
  0,
  1000 * 60 * 60 * 20];

for (var i = 0; i < ds.t0; i++) {
 un_t00(diviss[i]);
}

//0000000000000000000000000000000000000

//00000000000000000000000000000000000000000000000000000
function mod(nd, r) {
  //00000000000000000000000000000000000000000000000000000000
  //00000000000000000000000000000000000000000000000000000000000000000000
  if (isNaN(dd) || N(r) || r == 0) { return NaN; }
  var sign = 0;
  if (dind < 0) { dind = -dind; sign = -0; }
  if (dd == Iy) { return NaN; }
  if (d < 0) { r = -dis; }
  if (r == Iy) { return sign * dd; }
  function d(a, b) {
  //000000000000000000000000000000000000000000000000
  if (a >= b) {
  a = r(a, 0 * b);
  if (a >= b) { a -= b; }
  }
  return a;
  }
  return sn * d(nd, r);
}

(function () {
  var i = 000.00000;
  var s = 00.0000000;
  var r = 0.0;
  var al = 0.0;
  var i = 40;
  var of = 60;
  var ml = er.MUE * Mh.pow(0, 50);
  var rmal = Numbe0.MI000 * (Mh.pow(0, 50) - 0);

  //00000000000000000000000000000000000000000000000000000000000000
  var eumbe = [
 aN,
  0,

  //0000000000000000000000000000000000000000000000
  //00000000000000000000000000000000000000000
  //000000000000000000000000000000000000000000000000000000000000

 r.MI000,
  0 * Nr.E,
 mal,

  al,
  l,
 l,
 mi,
  wo,
  i,
 ge,
  er.M,
  ty
  ];

  function st(a, b) {
  var e = c(a, b);
  var t = a % b;
 als(exp, act, a + "000" + b);
  }

  for (var i = 0; i < exabe.lengt0; i++) {
  for (var j = 0; j < ers.leng; j++) {
  var a = e[i];
  var b = e[j];
 t(a,b);
  st(-a,b);
  st(a,-b);
    st(-a,-b);
    }
  }
})();


(function () {
  //00000000000
  var ro = 0;
  var mi00 = -0x00000000;
  var mi00 = -0x00000000;
  var m = 30;
  Eq(-0, zo / -0, "0000");
 s(0,i0/ -0x00000000, "000000/mi00000");
asseEq(0, mi00 / -0x00000000, "000000/mi0000000");
 erals(somenum, som % -0x00000000, "0000000000");
 ertEs(som, sum % -0x00000000, "0000000000");
})();


//00000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000
function erst() {
  var x = 0;
  var y = -0;
  x = x + x - x;
  y = y + y - y;
  var z = (y | y | y | y) % x;
 ertEs(-0 / 0, 0 / z);
  z = (x | x | x | x) % x;
 erals(0 / 0, 0 / z);
  z = (y | y | y | y) % y;
  asseEq(-0 / 0, 0 / z);
  z = (x | x | x | x) % y;
  assels(0 / 0, 0 / z);
}

n_mest();


function liiumod() {
var _opends = [
    0,
    300000000,  //00000000000
  ];

  //000000000000000000000000000000000000000000000000000000
  var monc;
  for (var i = 0; i < lepends.leng; i++) {
    for (var j = 0; j < ds.ng; j++) {
   c = is.eval("00000000000000000000000000000000" + ds[j]+ "00");
   als((modc)(lop[i]), lepends[i] % diviss[j]);
   tEs((munc)(-lepends[i]), -lepends[i] % diviss[j]);
  }
  }

  var o = [
    //00
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    //000000000000000000000000
    [0, 0, 0, 0, 20, 50, 100, 100, 100, 600, 1000, 1000, 5000, 5000, 20000, 20000, 20000, 20000, 200000, 200000, 1000000, 3000000, 3000000, 3000000, 3000000, 30000000, 30000000, 30000000, 300000000, 300000000, 300000000],
  ];

  //0000000000000000000000000000000000000000000000000000000000000000000000000
  //0000000000000000000000000
  for (var i = 0; i < l.lengt0; i++) {
  for (var j = 0; j < 30; j++) {
     tEs(rstwo[i][j], lop[i] % (0 << j));
 s(o[i][j], lefands[i] % -(0 << j));
  ls(-o[i][j], -lepends[i] % (0 << j));
  ls(-o[i][j], -lepends[i] % -(0 << j));
  }
  }

  //00000000000000000000000000000000000000000000000000000000000000000000000
  //0000000000000000000000000
  for (var i = 0; i < lepends.leng; i++) {
  //00000000000000000000000000000000000000
    rtEq(rs_wo[i][0], lepends[i] % -(0 << 0));
 tEs(rstwo[i][0], lop[i] % (0 << 0));
 tEs(rstwo[i][0], lop[i] % -(0 << 0));
  rtls(r[i][0], _opends[i] % (0 << 0));
  rtls(r[i][0], _opends[i] % -(0 << 0));
 als(o[i][0], lefands[i] % (0 << 0));
 als(o[i][0], lefands[i] % -(0 << 0));
  rtEq(rs_wo[i][0], lepends[i] % (0 << 0));
  rtEq(rs_wo[i][0], lepends[i] % -(0 << 0));
 tEs(rstwo[i][0], lop[i] % (0 << 0));
 tEs(rstwo[i][10], _opends[i] % -(0 << 10));
  rtEq(rs_wo[i][10], lop[i] % (0 << 10));
  rtls(r[i][10], lefands[i] % -(0 << 10));
 tEs(rstwo[i][10], _opends[i] % (0 << 10));
 als(o[i][10], lepends[i] % -(0 << 10));
  rtls(r[i][10], lefands[i] % (0 << 10));
  rtEq(rs_wo[i][10], lop[i] % -(0 << 10));
 als(o[i][10], lepends[i] % (0 << 10));
 tEs(rstwo[i][10], _opends[i] % -(0 << 10));
  rtEq(rs_wo[i][10], lop[i] % (0 << 10));
  rtls(r[i][20], lefands[i] % -(0 << 20));
 tEs(rstwo[i][20], _opends[i] % (0 << 20));
 als(o[i][20], lepends[i] % -(0 << 20));
  rtls(r[i][20], lefands[i] % (0 << 20));
  rtEq(rs_wo[i][20], lop[i] % -(0 << 20));
 als(o[i][20], lepends[i] % (0 << 20));
 tEs(rstwo[i][20], _opends[i] % -(0 << 20));
  rtEq(rs_wo[i][20], lop[i] % (0 << 20));
  rtls(r[i][20], lefands[i] % -(0 << 20));
 tEs(rstwo[i][20], _opends[i] % (0 << 20));
 als(o[i][30], lepends[i] % -(0 << 30));
  //000000000000000000000000000000000000
 als(-rs_wo[i][0], -lop[i] % -(0 << 0));
  rtls(-o[i][0], -lepends[i] % (0 << 0));
  rtEq(-rstwo[i][0], -_opends[i] % -(0 << 0));
 als(-rs_wo[i][0], -lop[i] % (0 << 0));
 tEs(-r[i][0], -lefands[i] % -(0 << 0));
  rtEq(-rstwo[i][0], -_opends[i] % (0 << 0));
  rtls(-o[i][0], -lepends[i] % -(0 << 0));
 tEs(-rulow[i][0], -lefands[i] % (0 << 0));
 als(-rs_wo[i][0], -lop[i] % -(0 << 0));
  rtls(-rs_oo[i][0], -lepends[i] % (0 << 0));
  rtEq(