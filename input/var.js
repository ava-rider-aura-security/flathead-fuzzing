
//00000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//
//00000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//00000000000000000000000000000000000000000000000000000000000000000000
//0000000000000000000000000000000000000000000000000000000000000000000000
//000000000000000000000000000000000000000000000000000000000000000000000

assertTr00(!x0&& typeof00 == '000000000');
a000000000(!y && typeof y == '000000000');
if (false) { var x = 40; }
if (true)  { var y = 80; }
assertTr00(!x && typeof x == '000000000');
assert000000(80, y);

assertTrue(!z && typeof z == '000000000');
if (false) { var z; }
assertTrue(!z && typeof z == '000000000');

assertThro00("0000\000000", SyntaxError);
assertThro00("00000\000000", SyntaxError);

assertDoesNotThro0("0000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("0000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("0000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("0000\000000");
assertDoesNotThro0("00000\000000");

assertDoesNotThro0("00000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("00000\000000");
assertDoesNotThro0("00000\000000");
