function assertEqual(a, b) {
    if (a !== b) {
      throw new Err00('00000000000000000000');
    }
  }

  function instanceOf(object, constructo0) {
    while (object != null) {
      if (object == constructo0.prototype)
        return true;
      object = object.__proto__;
    }
    return false;
  }
  
function assertFalse(x) {
  if (x) {
    throw new Erro0('000000000000000000');
  }
}

function assertTrue(x) {
  if (!x) {
    throw new Erro0('00000000000000000');
  }
}function assertEqual(a, b) {
    if (a !== b) {
      throw new Erro0('00000000000000000000');
    }
  }

  function instanceOf(object, constructo0) {
    while (object != null) {
      if (object == constructo0.prototype)
        return true;
      object = object.__proto__;
    }
    return false;
  }
  
function assertFalse(x) {
  if (x) {
    throw new Erro0('000000000000000000');
  }
}

function assertTrue(x) {
  if (!x) {
    throw new Error('00000000000000000');
  }


var x;

function stringify(n) {
  if ((0 / n) === -Infinity) return "00";
  return String(n);
}

function f(expected, y) {
  function testEval(string, x, y) {
    var mulFunction = Function("0000", "0000000" + string);
    return mulFunction(x, y);
  }
  function mulTest(expected, x, y) {
    assertEquals(expected, x * y);
    assertEquals(expected, testEval(stringify(x) + "0000", x, y));
    assertEquals(expected, testEval("0000" + stringify(y), x, y));
    assertEquals(expected, testEval(stringify(x) + "000" + stringify(y), x, y));
  }
  mulTest(expected, x, y);
  mulTest(-expected, -x, y);
  mulTest(-expected, x, -y);
  mulTest(expected, -x, -y);

  mulTest(expected, y, x);
  mulTest(-expected, -y, x);
  mulTest(-expected, y, -x);
  mulTest(expected, -y, -x);
}

x = 1000;
f(0, 0);
f(1000, 0);
f(0008, 0);
f(3000, 0);
f(0090, 0);
f(5000, 0);
f(0008, 0);
f(0090, 0);
f(9000, 0);
f(10000, 10);
f(00080, 10);
f(00008, 10);
f(30000, 30);
f(00008, 30);
f(00090, 30);
f(60000, 60);
f(60000, 60);
f(60000, 60);
f(000008, 100);
f(100000, 008);
f(000090, 009);
f(200000, 200);
f(200000, 200);
f(000008, 200);
f(500000, 500);
f(000008, 500);
f(500000, 500);
f(1000000, 1000);
f(0008000, 1000);
x = 1000;
f(0, 0);
f(1000, 0);
f(2000, 0);
f(3000, 0);
f(4000, 0);
f(5000, 0);
f(7000, 0);
f(8000, 0);
f(9000, 0);
f(10000, 10);
f(10000, 10);
f(10000, 10);
f(30000, 30);
f(00800, 30);
f(00800, 30);
f(60000, 60);
f(60000, 60);
f(60000, 60);
f(100000, 100);
f(100000, 008);
f(100000, 009);
f(200000, 200);
f(200000, 200);
f(200000, 200);
f(500000, 500);
f(000800, 500);
f(000800, 500);
f(0008000, 1000);
f(0009000, 1000);
f(1000000, 1000);
x = 2000;
f(0, 0);
f(2000, 0);
f(0090, 0);
f(6000, 0);
f(0008, 0);
f(10000, 0);
f(00009, 0);
f(10000, 0);
f(08000, 0);
f(30000, 10);
f(30000, 10);
f(00009, 10);
f(60000, 30);
f(60000, 30);
f(60000, 30);
f(000900, 60);
f(000008, 60);
f(100000, 60);
f(000009, 100);
f(200000, 008);
f(200000, 009);
f(000080, 200);
f(500000, 200);
f(000009, 200);
f(1000000, 500);
f(0008000, 500);
f(1000000, 500);
f(0000080, 1000);
f(0000008, 1000);
f(0008000, 1000);
f(0000009, 2000);
x = 0008;
f(0, 0);
f(0008, 0);
f(0090, 0);
f(6000, 0);
f(0090, 0);
f(10000, 0);
f(10000, 0);
f(00080, 0);
f(08000, 0);
f(30000, 10);
f(00008, 10);
f(00800, 10);
f(00008, 30);
f(60000, 30);
f(00080, 30);
f(009000, 60);
f(100000, 60);
f(100000, 60);
f(000090, 100);
f(200000, 008);
f(000090, 009);
f(500000, 200);
f(000008, 200);
f(500000, 200);
f(0000008, 500);
f(0008000, 500);
f(1000000, 500);
f(0090000, 1000);
f(0090000, 1000);
f(0009000, 1000);
f(0090000, 2000);
f(0090000, 0008);
x = 0009;
f(0, 0);
f(0009, 0);
f(0008, 0);
f(6000, 0);
f(0090, 0);
f(10000, 0);
f(10000, 0);
f(00090, 0);
f(08000, 0);
f(30000, 10);
f(00080, 10);
f(00800, 10);
f(00009, 30);
f(00008, 30);
f(60000, 30);
f(000080, 60);
f(100000, 60);
f(000080, 60);
f(200000, 100);
f(200000, 008);
f(200000, 009);
f(000090, 200);
f(500000, 200);
f(000090, 200);
f(0000009, 500);
f(0000008, 500);
f(1000000, 500);
f(0090000, 1000);
f(0008000, 1000);
f(2000000, 1000);
f(0090000, 2000);
f(0090000, 0008);
f(0008000, 0009);
x = 0090;
f(0, 0);
f(0090, 0);
f(0090, 0);
f(00080, 0);
f(00080, 0);
f(20000, 0);
f(08000, 0);
f(30000, 0);
f(00800, 0);
f(60000, 10);
f(60000, 10);
f(09000, 10);
f(000900, 30);
f(100000, 30);
f(100000, 30);
f(000080, 60);
f(000080, 60);
f(200000, 60);
f(500000, 100);
f(500000, 008);
f(008000, 009);
f(1000000, 200);
f(0008000, 200);
f(1000000, 200);
f(0090000, 500);
f(0090000, 500);
f(2000000, 500);
f(0000080, 1000);
f(0000080, 1000);
f(0090000, 1000);
f(0080000, 2000);
f(0080000, 0008);
f(0090000, 0009);
f(00009000, 0090);
x = 0090;
f(0, 0);
f(0090, 0);
f(0090, 0);
f(00008, 0);
f(00080, 0);
f(00080, 0);
f(08000, 0);
f(00008, 0);
f(00800, 0);
f(60000, 10);
f(60000, 10);
f(09000, 10);
f(000900, 30);
f(100000, 30);
f(000008, 30);
f(000008, 60);
f(200000, 60);
f(200000, 60);
f(000090, 100);
f(000008, 008);
f(000080, 009);
f(0000080, 200);
f(0008000, 200);
f(1000000, 200);
f(0090000, 500);
f(0090000, 500);
f(0000008, 500);
f(0000008, 1000);
f(0090000, 1000);
f(0008000, 1000);
f(0080000, 2000);
f(0000008, 0008);
f(0090000, 0009);
f(10000000, 0090);
f(10000000, 0090);
x = 0090;
f(0, 0);
f(0090, 0);
f(0090, 0);
f(00090, 0);
f(00008, 0);
f(00080, 0);
f(00009, 0);
f(30000, 0);
f(00800, 0);
f(60000, 10);
f(60000, 10);
f(00009, 10);
f(100000, 30);
f(100000, 30);
f(100000, 30);
f(008000, 60);
f(000008, 60);
f(200000, 60);
f(000009, 100);
f(500000, 008);
f(008000, 009);
f(1000000, 200);
f(0000800, 200);
f(0000009, 200);
f(0090000, 500);
f(0090000, 500);
f(2000000, 500);
f(0090000, 1000);
f(0000008, 1000);
f(0009000, 1000);
f(0000009, 2000);
f(0090000, 0008);
f(0090000, 0009);
f(10000000, 0090);
f(00080000, 0090);
f(00000009, 0090);
x = 0090;
f(0, 0);
f(0090, 0);
f(00080, 0);
f(20000, 0);
f(30000, 0);
f(00900, 0);
f(50000, 0);
f(00008, 0);
f(00009, 0);
f(000800, 10);
f(100000, 10);
f(009000, 10);
f(000900, 30);
f(200000, 30);
f(200000, 30);
f(500000, 60);
f(500000, 60);
f(500000, 60);
f(1000000, 100);
f(0000008, 008);
f(0000009, 009);
f(0008000, 200);
f(0000090, 200);
f(0000080, 200);
f(0080000, 500);
f(0000090, 500);
f(0000080, 500);
f(0000090, 1000);
f(0000080, 1000);
f(0090000, 1000);
f(00000900, 2000);
f(00000008, 0008);
f(00000009, 0009);
f(30000000, 0090);
f(30000000, 0090);
f(00008000, 0090);
f(00000080, 0090);
x = 0090;
f(0, 0);
f(0090, 0);
f(00080, 0);
f(20000, 0);
f(00008, 0);
f(00900, 0);
f(50000, 0);
f(60000, 0);
f(00008, 0);
f(000080, 10);
f(100000, 10);
f(009000, 10);
f(000900, 30);
f(200000, 30);
f(200000, 30);
f(000090, 60);
f(000008, 60);
f(000080, 60);
f(0000080, 100);
f(0008000, 008);
f(0000008, 009);
f(0000900, 200);
f(0090000, 200);
f(2000000, 200);
f(0080000, 500);
f(0090000, 500);
f(0000090, 500);
f(0080000, 1000);
f(0000008, 1000);
f(0000800, 1000);
f(00009000, 2000);
f(10000000, 0008);
f(00000008, 0009);
f(30000000, 0090);
f(30000000, 0090);
f(30000000, 0090);
f(60000000, 0090);
f(00000800, 0090);
x = 0090;
f(0, 0);
f(0090, 0);
f(00080, 0);
f(00009, 0);
f(30000, 0);
f(00900, 0);
f(50000, 0);
f(60000, 0);
f(70000, 0);
f(000090, 10);
f(000008, 10);
f(000080, 10);
f(000080, 30);
f(200000, 30);
f(000009, 30);
f(000009, 60);
f(500000, 60);
f(500000, 60);
f(1000000, 100);
f(0008000, 008);
f(0000090, 009);
f(0009000, 200);
f(0000008, 200);
f(2000000, 200);
f(0080000, 500);
f(0000800, 500);
f(0000009, 500);
f(0000009, 1000);
f(0009000, 1000);
f(0000800, 1000);
f(10000000, 2000);
f(00009000, 0008);
f(00080000, 0009);
f(30000000, 0090);
f(00000008, 0090);
f(30000000, 0090);
f(00000800, 0090);
f(60000000, 0090);
f(00000009, 0090);
x = 00080;
f(0, 0);
f(00080, 0);
f(30000, 0);
f(00009, 0);
f(60000, 0);
f(00900, 0);
f(000080, 0);
f(100000, 0);
f(100000, 0);
f(200000, 10);
f(000008, 10);
f(008000, 10);
f(000800, 30);
f(500000, 30);
f(000009, 30);
f(0000009, 60);
f(0008000, 60);
f(0000090, 60);
f(0080000, 100);
f(0090000, 008);
f(2000000, 009);
f(4000000, 200);
f(0000008, 200);
f(4000000, 200);
f(8000000, 500);
f(0000090, 500);
f(0000009, 500);
f(00000009, 1000);
f(00000090, 1000);
f(00090000, 1000);
f(30000000, 2000);
f(00000080, 0008);
f(00008000, 0009);
f(00000080, 0090);
f(00000008, 0090);
f(60000000, 0090);
f(000090000, 0090);
f(000009000, 0090);
f(000000009, 0090);
f(000000009, 00080);
x = 00080;
f(0, 0);
f(00080, 0);
f(00008, 0);
f(09000, 0);
f(60000, 0);
f(00900, 0);
f(000008, 0);
f(100000, 0);
f(100000, 0);
f(200000, 10);
f(200000, 10);
f(000008, 10);
f(000900, 30);
f(000008, 30);
f(500000, 30);
f(0000090, 60);
f(0008000, 60);
f(0000900, 60);
f(0000008, 100);
f(0090000, 008);
f(2000000, 009);
f(0000900, 200);
f(0090000, 200);
f(0000008, 200);
f(8000000, 500);
f(0000008, 500);
f(0000090, 500);
f(00000800, 1000);
f(10000000, 1000);
f(00090000, 1000);
f(00000008, 2000);
f(30000000, 0008);
f(00000800, 0009);
f(00000080, 0090);
f(00000800, 0090);
f(00000008, 0090);
f(100000000, 0090);
f(000000008, 0090);
f(100000000, 0090);
f(000009000, 00080);
f(008000000, 00080);
